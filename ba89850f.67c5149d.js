(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{178:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return s}));var a=n(2),o=n(9),r=(n(0),n(200)),l={id:"generate",title:"Generate"},c={id:"toolchain/generate",title:"Generate",description:"Theemo generates a CSS theme file for you supporting color schemes in an",source:"@site/../docs/toolchain/generate.md",permalink:"/theemo/docs/toolchain/generate",sidebar:"toolchain",previous:{title:"Build",permalink:"/theemo/docs/toolchain/build"},next:{title:"Glossary",permalink:"/theemo/docs/toolchain/glossary"}},i=[{value:"Configuration",id:"configuration",children:[{value:"<code>auto: boolean</code>",id:"auto-boolean",children:[]},{value:"<code>base?: string</code>",id:"base-string",children:[]},{value:"<code>input: string</code> and <code>output: string</code>",id:"input-string-and-output-string",children:[]},{value:"<code>colorSchemes: object</code>",id:"colorschemes-object",children:[]},{value:"<code>defaultColorScheme: string</code>",id:"defaultcolorscheme-string",children:[]}]},{value:"Examples",id:"examples",children:[{value:"Auto-Theme with <code>light</code> auto Color Scheme",id:"auto-theme-with-light-auto-color-scheme",children:[]},{value:"Auto-Theme with <code>light</code> auto Color Scheme and Manual Activation",id:"auto-theme-with-light-auto-color-scheme-and-manual-activation",children:[]},{value:"Manual-Theme with <code>light</code> auto Color Scheme",id:"manual-theme-with-light-auto-color-scheme",children:[]}]}],u={rightToc:i};function s(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Theemo generates a CSS theme file for you supporting color schemes in an\nadaptive way. Pick color scheme automatically (let the browser decide) or\nmanually? - Choice is yours. You can configure the generation step to whatever\nyou prefer."),Object(r.b)("p",null,"Theemo will take care of generating a CSS file and enhance it with classes or\nCSS media queries as pleased."),Object(r.b)("h2",{id:"configuration"},"Configuration"),Object(r.b)("h3",{id:"auto-boolean"},Object(r.b)("inlineCode",{parentName:"h3"},"auto: boolean")),Object(r.b)("p",null,"Linking the stylesheet of your theme with:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'<link href="path/to/your/theme.css" rel="stylesheet">\n')),Object(r.b)("p",null,"Do you want it to have immediate (autmatically) effect on loading? Or do you\nwant to ",Object(r.b)("em",{parentName:"p"},"activate")," it manually by adding a CSS class to the area where it should\nhave an affect?"),Object(r.b)("h3",{id:"base-string"},Object(r.b)("inlineCode",{parentName:"h3"},"base?: string")),Object(r.b)("p",null,"Default: ",Object(r.b)("inlineCode",{parentName:"p"},"base.css")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"base")," file, e.g. the CSS file that does not contain any color scheme\nrelated statements."),Object(r.b)("h3",{id:"input-string-and-output-string"},Object(r.b)("inlineCode",{parentName:"h3"},"input: string")," and ",Object(r.b)("inlineCode",{parentName:"h3"},"output: string")),Object(r.b)("p",null,"Default ",Object(r.b)("inlineCode",{parentName:"p"},"output"),": ",Object(r.b)("inlineCode",{parentName:"p"},"dist")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"input")," and ",Object(r.b)("inlineCode",{parentName:"p"},"output")," folder. Theemo will take multiple CSS files from an\ninput folder and turns them into ",Object(r.b)("em",{parentName:"p"},"one")," file into the output folder. Theemo\nexpects input files to look like this:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-css"}),":root {\n  --foo: bar;\n  /* ... */\n}\n")),Object(r.b)("h3",{id:"colorschemes-object"},Object(r.b)("inlineCode",{parentName:"h3"},"colorSchemes: object")),Object(r.b)("p",null,"If your theme ships with multiple color schemes, this is the way to configure\nthem. Let's start with a sample configuration:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "colorSchemes": {\n    "light": {\n      "auto": true,\n      "manual": true\n    },\n    "dark": {\n      "file": "lights-out.css",\n      "auto": false\n    }\n  }\n}\n')),Object(r.b)("p",null,"The name of the color scheme is the key of the object in which they are defined."),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"activation")," can happen automatically (if the name is recognized as ",Object(r.b)("inlineCode",{parentName:"p"},"light"),"\nor ",Object(r.b)("inlineCode",{parentName:"p"},"dark"),") which will generate CSS media queries (e.g. ",Object(r.b)("inlineCode",{parentName:"p"},"@media\n(prefers-color-scheme: light)"),"). If a browser is configured to instruct a\nwebsite to prefer a named color scheme, this will be picked up."),Object(r.b)("p",null,"When a ",Object(r.b)("inlineCode",{parentName:"p"},"file")," is given then this will be the input, anyway if defaults to\n",Object(r.b)("inlineCode",{parentName:"p"},"${name}.css")," inside ",Object(r.b)("inlineCode",{parentName:"p"},"input")," folder."),Object(r.b)("p",null,"A ",Object(r.b)("inlineCode",{parentName:"p"},"manual")," activation can requested (ie. if activation is\n",Object(r.b)("inlineCode",{parentName:"p"},"auto"),") to generate CSS classes to manually enable the color scheme in the\npreferred area of your website."),Object(r.b)("h3",{id:"defaultcolorscheme-string"},Object(r.b)("inlineCode",{parentName:"h3"},"defaultColorScheme: string")),Object(r.b)("p",null,"Given you have multiple color schemes, its good practice to pick one which is\nused as default. The value here refers to the keys you configured in ",Object(r.b)("inlineCode",{parentName:"p"},"colorSchemes"),"."),Object(r.b)("h2",{id:"examples"},"Examples"),Object(r.b)("p",null,"Here are some sample configurations and how to use the generated output."),Object(r.b)("p",null,"Given for the example:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"There is a ",Object(r.b)("inlineCode",{parentName:"li"},"light")," and ",Object(r.b)("inlineCode",{parentName:"li"},"dark")," color scheme"),Object(r.b)("li",{parentName:"ul"},"The theme is named ",Object(r.b)("inlineCode",{parentName:"li"},"ocean"))),Object(r.b)("h3",{id:"auto-theme-with-light-auto-color-scheme"},"Auto-Theme with ",Object(r.b)("inlineCode",{parentName:"h3"},"light")," auto Color Scheme"),Object(r.b)("p",null,"Config:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "auto": true,\n  "defaultColorScheme": "light",\n  "colorSchemes": {\n    "light": {\n      "auto": true,\n      "manual": false\n    },\n    "dark": {\n      "auto": true,\n      "manual": false\n    }\n  }\n}\n')),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-css"}),"/* No color scheme related tokens */\n:root, .ocean {\n  --bar: baz;\n}\n\n@media (prefers-color-scheme: no-preference), (prefers-color-scheme: light) {\n  :root, .ocean {\n    --foo: lightblue;\n  }\n}\n\n@media (prefers-color-scheme: dark) {\n  :root, .ocean {\n    --foo: darkblue;\n  }\n}\n")),Object(r.b)("p",null,"Usage:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'<head>\n  <link rel="stylesheet" href="path/to/ocean.css" type="text/css">\n</head>\n<body>\n</body>\n')),Object(r.b)("h3",{id:"auto-theme-with-light-auto-color-scheme-and-manual-activation"},"Auto-Theme with ",Object(r.b)("inlineCode",{parentName:"h3"},"light")," auto Color Scheme and Manual Activation"),Object(r.b)("p",null,"Config:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "auto": true,\n  "defaultColorScheme": "light",\n  "colorSchemes": {\n    "light": {\n      "auto": true,\n      "manual": true\n    },\n    "dark": {\n      "auto": true,\n      "manual": true\n    }\n  }\n}\n')),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-css"}),"/* No color scheme related tokens */\n:root, .ocean {\n  --bar: baz;\n}\n\n@media (prefers-color-scheme: no-preference), (prefers-color-scheme: light) {\n  :root, .ocean {\n    --foo: lightblue;\n  }\n}\n\n.ocean-light {\n  --foo: lightblue;\n}\n\n@media (prefers-color-scheme: dark) {\n  :root, .ocean {\n    --foo: darkblue;\n  }\n}\n\n.ocean-dark {\n  --foo: darkblue;\n}\n")),Object(r.b)("p",null,"Usage:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'<head>\n  <link rel="stylesheet" href="path/to/ocean.css" type="text/css">\n</head>\n<body>\n  <div>Here is the light</div>\n  <div class="ocean-dark">Lights out</div>\n</body>\n')),Object(r.b)("h3",{id:"manual-theme-with-light-auto-color-scheme"},"Manual-Theme with ",Object(r.b)("inlineCode",{parentName:"h3"},"light")," auto Color Scheme"),Object(r.b)("p",null,"Config:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "auto": false,\n  "defaultColorScheme": "light",\n  "colorSchemes": {\n    "light": {\n      "auto": true,\n      "manual": false\n    },\n    "dark": {\n      "auto": true,\n      "manual": false\n    }\n  }\n}\n')),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-css"}),"/* No color scheme related tokens */\n.ocean {\n  --bar: baz;\n}\n\n@media (prefers-color-scheme: no-preference), (prefers-color-scheme: light) {\n  .ocean {\n    --foo: lightblue;\n  }\n}\n\n@media (prefers-color-scheme: dark) {\n  .ocean {\n    --foo: darkblue;\n  }\n}\n")),Object(r.b)("p",null,"Usage 1:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'<head>\n  <link rel="stylesheet" href="path/to/ocean.css" type="text/css">\n</head>\n<body class="ocean">\n  Activation for the whole document\n</body>\n')),Object(r.b)("p",null,"Usage 2:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-html"}),'<head>\n  <link rel="stylesheet" href="path/to/ocean.css" type="text/css">\n</head>\n<body>\n  Here is no theme active\n\n  <div class="ocean">Swim in the water</div>\n</body>\n')))}s.isMDXComponent=!0},200:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=o.a.createContext({}),s=function(e){var t=o.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=s(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},p=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),b=s(n),p=a,d=b["".concat(l,".").concat(p)]||b[p]||h[p]||r;return n?o.a.createElement(d,c(c({ref:t},u),{},{components:n})):o.a.createElement(d,c({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=p;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var u=2;u<r;u++)l[u]=n[u];return o.a.createElement.apply(null,l)}return o.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);